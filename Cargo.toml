[package]
name = "wrapped_mono"
version = "0.1.0"
edition = "2021"
links = "mono-2.0"
license = "MIT"
description = "Wrapper around mono library. Allows easy loading and interop between code written for the .NET framework and rust."
repository = "https://github.com/FractalFir/wrapped_mono"
readme = "README.md"
keywords = [".NET","mono","C#","F#"]
categories = ["api-bindings"]
authors = ["FractalFir <fractalfirdev@gmail.com>"]
[build-dependencies]
bindgen = {version = "0.60.1",optional = true}
[dependencies]
macros = {path = "src/macros",version = "0.1"}
document-features = "0.2.3"
[dev-dependencies]
rusty-fork = "0.3.0"
[workspace]
members = ["src/macros"]
[features]
## Disables boxing/unboxing safety checks. Normaly, when an object is unboxed, it's type is checked to prevent crashes and errors. Enabling unsafe_unboxing will make wrapped_mono assume that type given by the user is allways correct.
unsafe_boxing = []
## Disables array safety checks. Normaly, when an array is created, it will make checks to enusre that its managed type maches its unmanaged type.
unsafe_arrays = []
## Disables all safety checks to speed `wrapped_mono` up. USE WITH CAUTION.
unsafe_speedup = ["unsafe_boxing","unsafe_arrays"]
## Build test dlls. Enable only for tests, if you want to change test .cs files.
build_test_dlls = []
## Regenerates bindings for mono library
regen_binds = ["bindgen"]
## Dumps code created as results of macros into "macro.dump" file. Use for debugging when macros do not behave as expecetd.
dump_macro_results = ["macros/dump_macro_results"]
